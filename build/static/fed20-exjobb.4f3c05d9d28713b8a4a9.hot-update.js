webpackHotUpdate("fed20-exjobb",{

/***/ "./packages/exjobb-susanne-theme/src/components/index.js":
/*!***************************************************************!*\
  !*** ./packages/exjobb-susanne-theme/src/components/index.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_nav__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/nav */ \"./packages/exjobb-susanne-theme/src/components/nav.js\");\n/* harmony import */ var _frontity_components_switch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @frontity/components/switch */ \"./node_modules/@frontity/components/switch.tsx\");\n/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./list */ \"./packages/exjobb-susanne-theme/src/components/list.js\");\n/* harmony import */ var _post__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./post */ \"./packages/exjobb-susanne-theme/src/components/post.js\");\n/* harmony import */ var _page__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./page */ \"./packages/exjobb-susanne-theme/src/components/page.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}// import React from \"react\";\n// import { connect, Global, css, styled, Head } from \"frontity\";\n// // import Link from \"@frontity/components/link\";\n// import Switch from \"@frontity/components/switch\";\n// import List from \"./list\";\n// import Post from \"./post\";\n// import Page from \"./page\";\n// import Link from \"./link\";\n// // import Loading from \"./loading\";\n// // import Error from \"./error\";\n// const Root = ({ state, actions }) => {\n//   const data = state.source.get(state.router.link);\n//   const items = state.source.get(`/menu/${state.theme.menuUrl}/`).items;\n//   return (\n//     <>\n//       <Head>\n//         <title>My First Frontity Theme</title>\n//         <meta\n//           name=\"description\"\n//           content=\"Based on the Frontity step by step tutorial\"\n//         />\n//       </Head>\n//       <Global\n//         styles={css`\n//           * {\n//             padding: 0;\n//             margin: 0;\n//             box-sizing: border-box;\n//           }\n//           html {\n//             font-family: system-ui, Arial, sans-serif;\n//           }\n//         `}\n//       />\n//       <Header isPostType={data.isPostType} isPage={data.isPage}>\n//         <HeaderContent>\n//           <h1>Frontity Workshop</h1>\n//           {state.theme.isUrlVisible ? (\n//             <>\n//               Current URL: {state.router.link}{\" \"}\n//               <Button onClick={actions.theme.toggleUrl}>&#x3c; Hide URL</Button>\n//             </>\n//           ) : (\n//             <Button onClick={actions.theme.toggleUrl}>Show URL &#x3e;</Button>\n//           )}\n//           <Menu>\n//             {items.map((item) => {\n//               return (\n//                 <nav key={item.ID}>\n//                   <Link\n//                     link={item.url}\n//                     css={css`\n//                       color: orange;\n//                       text-decoration: none;\n//                       margin-right: 1em;\n//                     `}\n//                   >\n//                     {item.title}\n//                   </Link>\n//                 </nav>\n//               );\n//             })}\n//           </Menu>\n//         </HeaderContent>\n//       </Header>\n//       <Main>\n//         <Switch>\n//           <List when={data.isArchive} />\n//           <Post when={data.isPost} />\n//           <Page when={data.isPage} />\n//         </Switch>\n//       </Main>\n//     </>\n//   );\n// };\n// const Header = styled.header`\n//   background-color: #e5edee;\n//   border-width: 0 0 8px 0;\n//   border-style: solid;\n//   border-color: ${(props) =>\n//     props.isPostType\n//       ? props.isPage\n//         ? \"lightsteelblue\"\n//         : \"lightseagreen\"\n//       : \"maroon\"};\n//   h1 {\n//     color: #4a4a4a;\n//   }\n// `;\n// const HeaderContent = styled.div`\n//   max-width: 800px;\n//   padding: 2em 1em;\n//   margin: auto;\n// `;\n// const Main = styled.main`\n//   max-width: 800px;\n//   padding: 1em;\n//   margin: auto;\n//   img {\n//     max-width: 100%;\n//   }\n//   h2 {\n//     margin: 0.5em 0;\n//   }\n//   p {\n//     line-height: 1.25em;\n//     margin-bottom: 0.75em;\n//   }\n//   figcaption {\n//     color: #828282;\n//     font-size: 0.8em;\n//     margin-bottom: 1em;\n//   }\n// `;\n// const Menu = styled.nav`\n//   display: flex;\n//   flex-direction: row;\n//   margin-top: 1em;\n//   & > a {\n//     margin-right: 1em;\n//     color: steelblue;\n//     text-decoration: none;\n//   }\n// `;\n// const Button = styled.button`\n//   background: transparent;\n//   border: none;\n//   color: #aaa;\n//   :hover {\n//     cursor: pointer;\n//     color: #888;\n//   }\n// `;\n// export default connect(Root);\nvar _ref= false?undefined:{name:\"1lp5m15-Root\",styles:\"*{margin-top:0;padding:0;box-sizing:border-box;}html{font-family:system-ui,Verdana,Arial,sans-serif;margin:0;}body{margin:0;}h1{margin-top:0;};label:Root;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};const Root=({state,actions})=>{const data=state.source.get(state.router.link);return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"Fragment\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(frontity__WEBPACK_IMPORTED_MODULE_1__[\"Global\"],{styles:_ref}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Header,{isPostType:data.isPostType,isPage:data.isPage,children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(HeaderContent,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(\"h1\",{children:\"Frontity Workshop\"}),state.theme.isUrlVisible?Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"Fragment\"],{children:[\"Current URL: \",state.router.link,Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Button,{onClick:actions.theme.toggleUrl,children:\"< Hide URL\"})]}):Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Button,{onClick:actions.theme.toggleUrl,children:\"Show URL >\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Menu,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_components_nav__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{})})]})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(\"main\",{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(_frontity_components_switch__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_list__WEBPACK_IMPORTED_MODULE_4__[\"default\"],{when:data.isArchive}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_post__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{when:data.isPost}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_page__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{when:data.isPage})]})})]});};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(Root));const Header=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"header\", false?undefined:{target:\"e1d4od6b3\",label:\"Header\"})( false?undefined:{name:\"drjfum\",styles:\"background-color:#ccc;h1{color:#081521;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const HeaderContent=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"div\", false?undefined:{target:\"e1d4od6b2\",label:\"HeaderContent\"})( false?undefined:{name:\"98vknt\",styles:\"max-width:800px;padding:2em 1em;margin:0 auto;h2{margin:0.5em 0;}p{line-height:1.25em;margin-bottom:0.75em;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Menu=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"nav\", false?undefined:{target:\"e1d4od6b1\",label:\"Menu\"})( false?undefined:{name:\"nbk8tq\",styles:\"display:flex;flex-direction:row;margin-top:1em;&>a{margin-right:1em;color:steelblue;text-decoration:none;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Button=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"button\", false?undefined:{target:\"e1d4od6b0\",label:\"Button\"})( false?undefined:{name:\"1r1mo1t\",styles:\"background:transparent;border:none;color:#aaa;:hover{cursor:pointer;color:#888;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/exjobb-susanne-theme/src/components/index.js\n");

/***/ })

})